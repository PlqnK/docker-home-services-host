---
- name: 'Ensure the user really wants to remove the Healthchecks stack'
  ansible.builtin.pause:
    prompt: "WARNING! DO YOU REALLY WANT TO REMOVE THE HEALTHCHECKS STACK?\nTHIS ACTION WILL DELETE ALL HEALTHCHECKS APP DATA AND IS IRREVERSIBLE!\nAnswer yes in capital letters to confirm"
    echo: true
  register: remove_prompt

- name: "Stop execution if user didn't answer 'YES'"
  ansible.builtin.fail:
    msg: "Stopping playbook execution because the playbook was called with the tag 'containers-remove' but the user didn't want to remove the containers."
  when: (remove_prompt.user_input != "YES")

- name: 'Disable and stop Healthchecks stack'
  ansible.builtin.systemd:
    name: '{{ item }}'
    daemon_reload: true
    enabled: false
    state: 'stopped'
  loop:
    - 'container-exec-healthchecks-postgres-dump.timer'
    - 'container-healthchecks-app.service'
    - 'container-healthchecks-postgres.service'
  register: systemd_units
  failed_when: (systemd_units.failed and not "Could not find the requested service" in systemd_units.msg)

- name: 'Remove Healthchecks stack systemd units'
  ansible.builtin.file:
    path: '/etc/systemd/system/{{ item }}'
    state: 'absent'
  loop:
    - 'container-exec-healthchecks-postgres-dump.timer'
    - 'container-exec-healthchecks-postgres-dump.service'
    - 'container-healthchecks-app.service'
    - 'container-healthchecks-postgres.service'
  notify: 'Reload systemd daemon'

- name: 'Remove Healthchecks stack network from firewalld trusted zone'
  block:
    - name: 'Get podman network info'
      containers.podman.podman_network_info:
        name: 'healthchecks-postgres-internal'
      register: 'podman_network'
      failed_when: (podman_network.failed and not "network not found" in podman_network.msg)

    - name: 'Remove podman network subnet from firewalld trusted zone'
      ansible.posix.firewalld:
        source: '{{ item }}'
        zone: 'trusted'
        permanent: true
        immediate: true
        state: 'disabled'
      loop: '{{ podman_network | community.general.json_query("networks[*].subnets[*].subnet") | ansible.builtin.flatten }}'

- name: 'Remove Healthchecks stack networks'
  containers.podman.podman_network:
    name: 'healthchecks-postgres-internal'
    state: 'absent'

- name: 'Remove Healthchecks stack secrets'
  containers.podman.podman_secret:
    name: '{{ item }}'
    state: 'absent'
  loop:
    - 'healthchecks_postgres_user'
    - 'healthchecks_postgres_password'

- name: 'Remove Healthchecks stack bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    state: 'absent'
  loop:
    - 'env/healthchecks-app'
    - 'config/healthchecks-app'
    - 'data/healthchecks-postgres'
    - 'runtime/healthchecks-postgres'
