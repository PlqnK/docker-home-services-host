---
- name: 'Create Gluetun network'
  containers.podman.podman_network:
    name: 'gluetun-external'
    internal: false
    ipv6: '{{ containers_ipv6.enable }}'

- name: 'Add Gluetun network to firewalld trusted zone'
  block:
    - name: 'Get podman networks info'
      containers.podman.podman_network_info:
        name: '{{ item }}'
      loop:
        - 'gluetun-external'
      register: 'podman_networks'
    
    - name: 'Add podman networks subnets to firewalld trusted zone'
      ansible.posix.firewalld:
        source: '{{ item }}'
        zone: 'trusted'
        permanent: true
        immediate: true
        state: 'enabled'
      loop: '{{ podman_networks.results | json_query("[*].networks[*].subnets[*].subnet") | flatten }}'

- name: 'Create Transmission pod'
  containers.podman.podman_pod:
    name: 'transmission-gluetun'
    network:
      - 'gluetun-external'
      - 'common-internal'
    state: 'created'

- name: 'Create Transmission pod bind mounts paths'
  ansible.builtin.file:
    path: '{{ item.path }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
    state: 'directory'
  loop:
    - path: '{{ containers_storage_base_path }}/env/gluetun'
      owner: 'root'
      group: 'root'
      mode: '0700'
    - path: '{{ containers_storage_base_path }}/data/gluetun'
      owner: 'root'
      group: 'root'
      mode: '0700'
    - path: '{{ containers_storage_base_path }}/data/transmission'
      owner: 911
      group: 911
      mode: '0700'

- name: 'Create Transmission container secrets'
  containers.podman.podman_secret:
    name: '{{ item.name }}'
    data: '{{ item.data }}'
    skip_existing: true
    state: 'present'
  loop:
    - name: 'transmission_user'
      data: '{{ transmission.user }}'
    - name: 'transmission_password'
      data: '{{ transmission.password }}'

- name: 'Create Gluetun container environment file'
  ansible.builtin.copy:
    content: |
      WIREGUARD_PRIVATE_KEY={{ gluetun.wireguard.private_key }}
    dest: '{{ containers_storage_base_path }}/env/gluetun/gluetun.env'
    owner: 'root'
    group: 'root'
    mode: '0400'
  register: 'gluetun_environment_file'

- name: 'Create Gluetun container'
  containers.podman.podman_container:
    name: 'gluetun'
    image: '{{ containers_images.gluetun }}:{{ containers_images_tags.gluetun }}'
    pod: 'transmission-gluetun'
    timezone: '{{ timezone }}'
    cap_add:
      - 'NET_ADMIN'
    sysctl:
      net.ipv6.conf.all.disable_ipv6: '0'
    device:
      - '/dev/net/tun:/dev/net/tun'
    volume:
      - '{{ containers_storage_base_path }}/data/gluetun:/gluetun:Z'
    env_file: '{{ containers_storage_base_path }}/env/gluetun/gluetun.env'
    env:
      TZ: '{{ timezone }}'
      VPN_TYPE: 'wireguard'
      VPN_INTERFACE: 'wg0'
      VPN_SERVICE_PROVIDER: '{{ gluetun.provider.name }}'
      WIREGUARD_ADDRESSES: '{{ gluetun.wireguard.addresses }}'
      SERVER_CITIES: '{{ gluetun.provider.cities }}'
      FIREWALL_VPN_INPUT_PORTS: '{{ gluetun.firewall.vpn_input_ports }}'
      DOT: 'off'
      DNS_ADDRESS: '{{ gluetun.dns.addresses }}'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    recreate: '{{ ("true" | bool) if gluetun_environment_file.changed else ("false" | bool) }}'
    state: 'created'

- name: 'Create Transmission container'
  containers.podman.podman_container:
    name: 'transmission'
    image: '{{ containers_images.transmission }}:{{ containers_images_tags.transmission }}'
    pod: 'transmission-gluetun'
    timezone: '{{ timezone }}'
    expose:
      - 9091
    volume:
      - '{{ containers_storage_base_path }}/data/transmission:/config:Z'
      - '{{ autofs_base_path }}/downloads/bittorrent/downloads:/downloads:slave'
      - '{{ autofs_base_path }}/downloads/bittorrent/watch:/watch:slave'
    secrets:
      - 'transmission_user'
      - 'transmission_password'
    env:
      TZ: '{{ timezone }}'
      FILE__USER: '/run/secrets/transmission_user'
      FILE__PASS: '/run/secrets/transmission_password'
    label:
      traefik.enable: 'true'
      traefik.docker.network: 'common-internal'
      traefik.http.routers.transmission.rule: 'Host(`transmission.{{ domain_name }}`)'
      traefik.http.routers.transmission.entrypoints: 'websecure'
      traefik.http.routers.transmission.middlewares: 'set-security-headers@file, restrict-external-access@file'
      traefik.http.services.transmission.loadbalancer.server.port: '9091'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
      after:
        - 'container-gluetun.service'
      requires:
        - 'container-gluetun.service'
    state: 'created'

- name: 'Generate Transmission pod systemd unit file'
  containers.podman.podman_pod:
    name: 'transmission-gluetun'
    network:
      - 'gluetun-external'
      - 'common-internal'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    state: 'created'

- name: 'Enable and start Transmission pod'
  ansible.builtin.systemd:
    name: 'pod-transmission-gluetun.service'
    daemon_reload: true
    enabled: true
    state: 'started'
