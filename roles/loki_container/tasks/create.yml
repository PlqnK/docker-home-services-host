---
- name: 'Create Loki bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    owner: 10001
    group: 10001
    mode: '0700'
    state: 'directory'
  loop:
    - 'config/loki'
    - 'runtime/loki'

- name: 'Create Loki config from template'
  ansible.builtin.template:
    src: 'loki.yaml.j2'
    dest: '{{ containers_storage_path }}/config/loki/loki.yaml'
    owner: 10001
    group: 10001
    mode: '0644'

- name: 'Create Loki container'
  containers.podman.podman_container:
    name: 'loki'
    image: '{{ containers_images.loki }}:{{ containers_images_tags.loki }}'
    command: '-config.file=/etc/loki/loki.yaml'
    network:
      - 'web-egress'
      - 'common-internal'
    expose:
      - 3100
    volume:
      - '{{ containers_storage_path }}/config/loki/loki.yaml:/etc/loki/loki.yaml:Z'
      - '{{ containers_storage_path }}/runtime/loki:/loki:Z'
    timezone: '{{ timezone }}'
    env:
      TZ: '{{ timezone }}'
    label:
      traefik.enable: 'true'
      traefik.docker.network: 'common-internal'
      traefik.http.routers.loki.rule: 'Host(`loki.{{ domain_name }}`)'
      traefik.http.routers.loki.entrypoints: 'websecure'
      traefik.http.routers.loki.middlewares: 'set-security-headers@file, restrict-external-access@file, loki-auth'
      traefik.http.middlewares.loki-auth.basicauth.users: '{{ loki.user }}:{{ loki.password_hash }}'
      traefik.http.services.loki.loadbalancer.server.port: '3100'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    state: 'created'

- name: 'Enable and start Loki container'
  ansible.builtin.systemd:
    name: 'container-loki.service'
    daemon_reload: true
    enabled: true
    state: 'started'
