---
- name: 'Check if provisioning a Vagrant VM'
  ansible.builtin.getent:
    database: 'passwd'
    key: 'vagrant'
    fail_key: false

- name: 'Create Loki CNAME record'
  community.general.gandi_livedns:
    api_key: '{{ gandi_api_key }}'
    domain: '{{ domain_name }}'
    type: 'CNAME'
    record: 'loki'
    values:
      - '{{ ansible_hostname }}.{{ domain_name }}.'
    ttl: 10800
    state: 'present'
  when: (getent_passwd.vagrant is none)
  delegate_to: 'localhost'

- name: 'Create Loki bind mounts paths'
  ansible.builtin.file:
    path: '{{ item.path }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
    state: 'directory'
  loop:
    - path: '{{ containers_storage_base_path }}/config/loki'
      owner: 10001
      group: 10001
      mode: '0700'
    - path: '{{ containers_storage_base_path }}/runtime/loki'
      owner: 10001
      group: 10001
      mode: '0700'

- name: 'Create Loki configs from templates'
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
  loop:
    - src: 'loki.yaml.j2'
      dest: '{{ containers_storage_base_path }}/config/loki/loki.yaml'
      owner: 10001
      group: 10001
      mode: '0644'

- name: 'Create Loki container'
  containers.podman.podman_container:
    name: 'loki'
    image: '{{ containers_images.loki }}:{{ containers_images_tags.loki }}'
    command: '-config.file=/etc/loki/loki.yml'
    timezone: '{{ timezone }}'
    network:
      - 'web-egress'
      - 'common-internal'
    expose:
      - 3100
    volume:
      - '{{ containers_storage_base_path }}/config/loki/loki.yaml:/etc/loki/loki.yaml:Z'
      - '{{ containers_storage_base_path }}/runtime/loki:/loki:Z'
    env:
      TZ: '{{ timezone }}'
    label:
      traefik.enable: 'true'
      traefik.docker.network: 'common-internal'
      traefik.http.routers.bazarr.rule: 'Host(`loki.{{ domain_name }}`)'
      traefik.http.routers.bazarr.entrypoints: 'websecure'
      traefik.http.routers.bazarr.middlewares: 'set-security-headers@file, restrict-external-access@file'
      traefik.http.services.bazarr.loadbalancer.server.port: '3100'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    state: 'created'

- name: 'Enable and start Loki container'
  ansible.builtin.systemd:
    name: 'container-loki.service'
    daemon_reload: true
    enabled: true
    state: 'started'
