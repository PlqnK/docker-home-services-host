---
- name: 'Check if provisioning a Vagrant VM'
  ansible.builtin.getent:
    database: 'passwd'
    key: 'vagrant'
    fail_key: false

- name: 'Create Prometheus CNAME record'
  community.general.gandi_livedns:
    api_key: '{{ gandi_api_key }}'
    domain: '{{ domain_name }}'
    type: 'CNAME'
    record: 'prometheus'
    values:
      - '{{ ansible_hostname }}.{{ domain_name }}.'
    ttl: 10800
    state: 'present'
  when: (getent_passwd.vagrant is none)
  delegate_to: 'localhost'

- name: 'Create Prometheus bind mounts paths'
  ansible.builtin.file:
    path: '{{ item.path }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
    state: 'directory'
  loop:
    - path: '{{ containers_storage_base_path }}/config/prometheus'
      owner: 65534
      group: 65534
      mode: '0700'
    - path: '{{ containers_storage_base_path }}/runtime/prometheus'
      owner: 65534
      group: 65534
      mode: '0700'

- name: 'Create Prometheus configs from templates'
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
  loop:
    - src: 'prometheus.yml.j2'
      dest: '{{ containers_storage_base_path }}/config/prometheus/prometheus.yml'
      owner: 65534
      group: 65534
      mode: '0644'
    - src: 'web.yml.j2'
      dest: '{{ containers_storage_base_path }}/config/prometheus/web.yml'
      owner: 65534
      group: 65534
      mode: '0644'

- name: 'Create Prometheus container'
  containers.podman.podman_container:
    name: 'prometheus'
    image: '{{ containers_images.prometheus }}:{{ containers_images_tags.prometheus }}'
    command: '--config.file=/etc/prometheus/prometheus.yml --web.config.file=/etc/prometheus/web.yml --storage.tsdb.path=/prometheus'
    network:
      - 'web-egress'
      - 'common-internal'
    expose:
      - 9090
    volume:
      - '{{ containers_storage_base_path }}/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:Z'
      - '{{ containers_storage_base_path }}/config/prometheus/web.yml:/etc/prometheus/web.yml:Z'
      - '{{ containers_storage_base_path }}/runtime/prometheus:/prometheus:Z'
    timezone: '{{ timezone }}'
    env:
      TZ: '{{ timezone }}'
    label:
      traefik.enable: 'true'
      traefik.docker.network: 'common-internal'
      traefik.http.routers.prometheus.rule: 'Host(`prometheus.{{ domain_name }}`)'
      traefik.http.routers.prometheus.entrypoints: 'websecure'
      traefik.http.routers.prometheus.middlewares: 'set-security-headers@file, restrict-external-access@file'
      traefik.http.services.prometheus.loadbalancer.server.port: '9090'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    state: 'created'

- name: 'Enable and start Prometheus container'
  ansible.builtin.systemd:
    name: 'container-prometheus.service'
    daemon_reload: true
    enabled: true
    state: 'started'
