---
- name: 'Create Prometheus bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    owner: 65534
    group: 65534
    mode: '0700'
    state: 'directory'
  loop:
    - 'config/prometheus'
    - 'runtime/prometheus'

- name: 'Create Prometheus configs from templates'
  ansible.builtin.template:
    src: '{{ item }}.j2'
    dest: '{{ containers_storage_path }}/config/prometheus/{{ item }}'
    owner: 65534
    group: 65534
    mode: '0644'
  loop:
    - 'prometheus.yml'
    - 'web.yml'

- name: 'Create Prometheus secrets'
  containers.podman.podman_secret:
    name: '{{ item.name }}'
    data: '{{ item.data }}'
    skip_existing: true
    state: 'present'
  loop:
    - name: 'prometheus_prometheus_password'
      data: '{{ prometheus.scrape_configs.prometheus.basic_auth.password }}'
    - name: 'prometheus_node_password'
      data: '{{ prometheus.scrape_configs.node.basic_auth.password }}'
    - name: 'prometheus_systemd_password'
      data: '{{ prometheus.scrape_configs.systemd.basic_auth.password }}'

- name: 'Create Prometheus container'
  containers.podman.podman_container:
    name: 'prometheus'
    image: '{{ containers_images.prometheus }}:{{ containers_images_tags.prometheus }}'
    command: '--config.file=/etc/prometheus/prometheus.yml --web.config.file=/etc/prometheus/web.yml --storage.tsdb.path=/prometheus'
    network:
      - 'web-egress'
      - 'common-internal'
    expose:
      - 9090
    volume:
      - '{{ containers_storage_path }}/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:Z'
      - '{{ containers_storage_path }}/config/prometheus/web.yml:/etc/prometheus/web.yml:Z'
      - '{{ containers_storage_path }}/runtime/prometheus:/prometheus:Z'
    secrets:
      - 'prometheus_prometheus_password'
      - 'prometheus_node_password'
      - 'prometheus_systemd_password'
    timezone: '{{ timezone }}'
    env:
      TZ: '{{ timezone }}'
    label:
      traefik.enable: 'true'
      traefik.docker.network: 'common-internal'
      traefik.http.routers.prometheus.rule: 'Host(`prometheus.{{ domain_name }}`)'
      traefik.http.routers.prometheus.entrypoints: 'websecure'
      traefik.http.routers.prometheus.middlewares: 'set-security-headers@file, restrict-external-access@file'
      traefik.http.services.prometheus.loadbalancer.server.port: '9090'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    state: 'created'

- name: 'Enable and start Prometheus container'
  ansible.builtin.systemd:
    name: 'container-prometheus.service'
    daemon_reload: true
    enabled: true
    state: 'started'
