---
- name: 'Manage Home Assistant CNAME record'
  delegate_to: 'localhost'
  block:
    - name: 'Get Home Assistant CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/home/CNAME/'
        method: 'GET'
        status_code: [200, 404]
        headers:
          Authorization: 'Token {{ desec_token }}'
      register: desec_rrsets_get

    - name: 'Create Home Assistant CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/'
        method: 'POST'
        status_code: [201]
        headers:
          Authorization: 'Token {{ desec_token }}'
        body_format: 'json'
        body:
          subname: 'home'
          type: 'CNAME'
          ttl: 3600
          records:
            - '{{ ansible_fqdn }}.'
      register: desec_rrsets_post
      when: (desec_rrsets_get.status == 404)
      changed_when: (desec_rrsets_post.status == 201)

    - name: 'Update Home Assistant CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/home/CNAME/'
        method: 'PATCH'
        status_code: [200]
        headers:
          Authorization: 'Token {{ desec_token }}'
        body_format: 'json'
        body:
          records:
            - '{{ ansible_fqdn }}.'
      register: desec_rrsets_patch
      when: (desec_rrsets_get.status == 200 and desec_rrsets_get.json.records != [ansible_fqdn + "."])
      changed_when: (desec_rrsets_patch.status == 200)

- name: 'Create Home Assistant data bind mount path'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/data/home-assistant'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'directory'

- name: 'Create Home Assistant quadlet unit from template'
  ansible.builtin.template:
    src: 'home-assistant.container.j2'
    dest: '/etc/containers/systemd/home-assistant.container'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: 'quadlet_unit'
  notify: 'Reload systemd daemon'

- name: 'Enable and start Home Assistant container'
  ansible.builtin.systemd:
    name: 'home-assistant.service'
    daemon_reload: true
    enabled: true
    state: 'started'
  register: 'systemd_start'

- name: 'Restart Home Assistant service if quadlet unit has changed while service was already started'
  ansible.builtin.systemd:
    name: 'home-assistant.service'
    daemon_reload: true
    state: 'restarted'
  when: (quadlet_unit.changed and not systemd_start.changed)

- name: 'Add Traefik container network to Home Assistant trusted proxies'
  block:
    - name: 'Get podman networks info'
      containers.podman.podman_network_info:
        name: 'traefik-external'
      register: 'podman_network'

    - name: 'Authorize reverse proxy in configuration file'
      ansible.builtin.blockinfile:
        path: '{{ containers_storage_path }}/data/home-assistant/configuration.yaml'
        block: |
          http:
            use_x_forwarded_for: true
            trusted_proxies:
          {% for subnet in podman_network | community.general.json_query("networks[*].subnets[*].subnet") | ansible.builtin.flatten %}
              - {{ subnet }}
          {% endfor %}
      notify: 'Restart home-assistant service'
