---
- name: 'Ensure the user really wants to remove the vdirsyncer container'
  ansible.builtin.pause:
    prompt: "WARNING! DO YOU REALLY WANT TO REMOVE THE VDIRSYNCER CONTAINER?\nAnswer yes in capital letters to confirm"
    echo: true
  register: remove_prompt

- name: "Stop execution if user didn't answer 'YES'"
  ansible.builtin.fail:
    msg: "Stopping playbook execution because the playbook was called with the tag 'containers-remove' but the user didn't want to remove the containers."
  when: (remove_prompt.user_input != "YES")

- name: 'Disable and stop vdirsyncer timer'
  ansible.builtin.systemd:
    name: 'vdirsyncer.timer'
    daemon_reload: true
    enabled: false
    state: 'stopped'
  register: systemd_unit
  failed_when: (systemd_unit.failed and not "Could not find the requested service" in systemd_unit.msg)

- name: 'Remove vdirsyncer container systemd units'
  ansible.builtin.file:
    path: '/etc/systemd/system/{{ item }}'
    state: 'absent'
  loop:
    - 'vdirsyncer.timer'
    - 'vdirsyncer.service'
  notify: 'Reload systemd daemon'

- name: 'Remove vdirsyncer command script from /usr/local/bin'
  ansible.builtin.file:
    path: '/usr/local/bin/vdirsyncer'
    state: 'absent'

- name: 'Remove vdirsyncer stack secrets'
  containers.podman.podman_secret:
    name: '{{ item }}'
    state: 'absent'
  loop:
    - 'vdirsyncer_carddav_password'
    - 'vdirsyncer_caldav_password'

- name: 'Remove vdirsyncer bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    state: 'absent'
  loop:
    - 'config/vdirsyncer'
    - 'runtime/vdirsyncer'
