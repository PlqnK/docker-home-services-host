---
- name: 'Create Grafana bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    owner: 472
    group: 'root'
    mode: '0700'
    state: 'directory'
  loop:
    - 'config/grafana'
    - 'data/grafana'

- name: 'Create Grafana config from template'
  ansible.builtin.template:
    src: 'grafana.ini.j2'
    dest: '{{ containers_storage_path }}/config/grafana/grafana.ini'
    owner: 472
    group: 'root'
    mode: '0644'

- name: 'Create Grafana container'
  containers.podman.podman_container:
    name: 'grafana'
    image: '{{ containers_images.grafana }}:{{ containers_images_tags.grafana }}'
    network:
      - 'web-egress'
      - 'common-internal'
    expose:
      - 3000
    volume:
      #- '{{ containers_storage_path }}/config/grafana/grafana.ini:/etc/grafana/grafana.ini:Z'
      - '{{ containers_storage_path }}/data/grafana:/var/lib/grafana:Z'
    timezone: '{{ timezone }}'
    env:
      TZ: '{{ timezone }}'
    label:
      traefik.enable: 'true'
      traefik.docker.network: 'common-internal'
      traefik.http.routers.grafana.rule: 'Host(`grafana.{{ domain_name }}`)'
      traefik.http.routers.grafana.entrypoints: 'websecure'
      traefik.http.routers.grafana.middlewares: 'set-security-headers@file, restrict-external-access@file'
      traefik.http.services.grafana.loadbalancer.server.port: '3000'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    state: 'created'

- name: 'Enable and start Grafana container'
  ansible.builtin.systemd:
    name: 'container-grafana.service'
    daemon_reload: true
    enabled: true
    state: 'started'
