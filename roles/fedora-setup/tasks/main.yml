---
- name: 'Upgrade all packages'
  dnf:
    name: '*'
    state: 'latest'

- name: 'Install needed packages'
  dnf:
    name:
      - 'firewalld'
      - 'dnf-plugins-core'
      - 'htop'
      - 'wget'
      - 'curl'
      - 'vim'
      - 'git'
      - 'nfs-utils'
      - 'autofs'
      - 'rsync'
      - 'rsync-daemon'
    state: 'present'

- name: 'Ensure SELinux is enabled'
  selinux:
    policy: 'targeted'
    state: 'enforcing'

- name: 'Ensure firewalld is enabled and running'
  systemd:
    name: 'firewalld.service'
    state: 'started'
    enabled: yes

- name: 'Create NFS mount points'
  file:
    path: '{{ nfs_mount_path }}/{{ item.path }}'
    state: 'directory'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
  loop: '{{ nfs_mount_points }}'

- name: 'Create AutoFS master file from template'
  template:
    src: 'auto.master.j2'
    dest: '/etc/auto.master.d/{{ storage_server_name }}.autofs'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create AutoFS template file from template'
  template:
    src: 'auto.template.j2'
    dest: '/etc/auto.{{ storage_server_name }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Enable and start the autofs service'
  systemd:
    name: 'autofs.service'
    state: 'started'
    enabled: yes

- name: 'Checking if provisioning a Vagrant VM'
  getent:
    database: 'passwd'
    key: 'vagrant'
    fail_key: no

- name: 'Create rsyncd config file from template'
  template:
    src: 'rsyncd.conf.j2'
    dest: '/etc/rsyncd.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create rsyncd secrets file from template'
  template:
    src: 'rsyncd.secrets.j2'
    dest: '/etc/rsyncd.secrets'
    owner: 'root'
    group: 'root'
    mode: '0600'

- name: 'Authorize rsyncd in firewalld'
  firewalld:
    zone: 'public'
    service: 'rsyncd'
    permanent: yes
    immediate: yes
    state: 'enabled'

# Temporary. Containers config files have the SELinux container_file_t type so rsync can't access them.
# With this seboolean rsync can export read only those files.
- name: 'SELinux: allow rsyncd to export everything read only'
  seboolean:
    name: 'rsync_export_all_ro'
    state: true
    persistent: yes

- name: 'Enable and start the rsyncd service'
  systemd:
    name: 'rsyncd.service'
    state: 'started'
    enabled: yes
