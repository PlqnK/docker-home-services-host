---
- name: 'Ensure the user really wants to remove the Transmission pod'
  ansible.builtin.pause:
    prompt: "WARNING! DO YOU REALLY WANT TO REMOVE THE TRANSMISSION POD?\nTHIS ACTION WILL DELETE ALL TRANSMISSION APP DATA AND IS IRREVERSIBLE!\nAnswer yes in capital letters to confirm"
    echo: true
  register: remove_prompt

- name: "Stop execution if user didn't answer 'YES'"
  ansible.builtin.fail:
    msg: "Stopping playbook execution because the playbook was called with the tag 'containers-remove' but the user didn't want to remove the containers."
  when: (remove_prompt.user_input != "YES")

- name: 'Disable and stop Transmission pod'
  ansible.builtin.systemd:
    name: 'transmission-gluetun-pod.service'
    daemon_reload: true
    enabled: false
    state: 'stopped'
  register: systemd_unit
  failed_when: (systemd_unit.failed and not "Could not find the requested service" in systemd_unit.msg)

- name: 'Remove Transmission pod quadlet units'
  ansible.builtin.file:
    path: '/etc/containers/systemd/{{ item }}'
    state: 'absent'
  loop:
    - 'transmission-gluetun.pod'
    - 'transmission.container'
    - 'gluetun.container'
  notify: 'Reload systemd daemon'

- name: 'Remove Gluetun network from firewalld trusted zone'
  block:
    - name: 'Get podman networks info'
      containers.podman.podman_network_info:
        name: 'gluetun-external'
      register: 'podman_network'
      failed_when: (podman_network.failed and not "network not found" in podman_network.msg)

    - name: 'Remove podman networks subnets from firewalld trusted zone'
      ansible.posix.firewalld:
        source: '{{ item }}'
        zone: 'trusted'
        permanent: true
        immediate: true
        state: 'disabled'
      loop: '{{ podman_network | community.general.json_query("networks[*].subnets[*].subnet") | ansible.builtin.flatten }}'

- name: 'Remove Gluetun network'
  containers.podman.podman_network:
    name: 'gluetun-external'
    state: 'absent'

- name: 'Check if SELinux is configured to allow the use of TUN in containers'
  ansible.builtin.shell:
    cmd: 'semodule -l | grep container-tun'
  register: container_tun_semodule
  changed_when: false
  # grep returns 1 if the string isn't found and 2 for exceptions so we need to change the task fail condition.
  failed_when: (container_tun_semodule.rc == 2)
  check_mode: false

- name: 'Remove the SELinux custom policy module' # noqa: no-changed-when
  ansible.builtin.command:
    cmd: 'semodule -r container-tun'
  when: (container_tun_semodule.rc == 0)

- name: 'Unload kernel modules'
  community.general.modprobe:
    name: '{{ item }}'
    state: 'absent'
  loop:
    - 'tun'
    - 'wireguard'

- name: 'Disable kernel modules at boot'
  ansible.builtin.file:
    path: '/etc/modules-load.d/{{ item }}.conf'
    state: 'absent'
  loop:
    - 'tun'
    - 'wireguard'

- name: 'Remove Transmission container secrets'
  containers.podman.podman_secret:
    name: '{{ item }}'
    state: 'absent'
  loop:
    - 'transmission_user'
    - 'transmission_password'

- name: 'Remove Transmission data bind mount path'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    state: 'absent'
  loop:
    - 'env/gluetun'
    - 'data/gluetun'
    - 'data/transmission'
