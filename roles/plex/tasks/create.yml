---
- name: 'Manage Plex CNAME record'
  delegate_to: 'localhost'
  check_mode: false
  block:
    - name: 'Get Plex CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/plex/CNAME/'
        method: 'GET'
        status_code: [200, 404]
        headers:
          Authorization: 'Token {{ desec_token }}'
      register: desec_rrsets_get

    - name: 'Create Plex CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/'
        method: 'POST'
        status_code: [201]
        headers:
          Authorization: 'Token {{ desec_token }}'
        body_format: 'json'
        body:
          subname: 'plex'
          type: 'CNAME'
          ttl: 3600
          records:
            - '{{ ansible_fqdn }}.'
      register: desec_rrsets_post
      when: (desec_rrsets_get.status == 404)
      changed_when: (desec_rrsets_post.status == 201)

    - name: 'Update Plex CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/plex/CNAME/'
        method: 'PATCH'
        status_code: [200]
        headers:
          Authorization: 'Token {{ desec_token }}'
        body_format: 'json'
        body:
          records:
            - '{{ ansible_fqdn }}.'
      register: desec_rrsets_patch
      when: (desec_rrsets_get.status == 200 and desec_rrsets_get.json.records != [ansible_fqdn + "."])
      changed_when: (desec_rrsets_patch.status == 200)

- name: 'Create Plex network'
  containers.podman.podman_network:
    name: 'plex-external'
    internal: false
    ipv6: '{{ containers_ipv6.enable }}'
    # See https://github.com/containers/netavark/issues/709
    #opt:
    #  isolate: true

- name: 'Add Plex network to firewalld trusted zone'
  block:
    - name: 'Get podman networks info'
      containers.podman.podman_network_info:
        name: 'plex-external'
      register: 'podman_network'

    - name: 'Add podman networks subnets to firewalld trusted zone'
      ansible.posix.firewalld:
        source: '{{ item }}'
        zone: 'trusted'
        permanent: true
        immediate: true
        state: 'enabled'
      loop: '{{ podman_network | community.general.json_query("networks[*].subnets[*].subnet") | ansible.builtin.flatten }}'

- name: 'Accept Plex incomming connections in default firewalld zone'
  ansible.posix.firewalld:
    service: 'plex'
    permanent: true
    immediate: true
    state: 'enabled'

- name: 'Create Plex bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_path }}/{{ item }}'
    owner: 1000
    group: 1000
    mode: '0700'
    state: 'directory'
  loop:
    - 'data/plex'
    - 'runtime/plex'

- name: 'Create Plex quadlet unit from template'
  ansible.builtin.template:
    src: 'plex.container.j2'
    dest: '/etc/containers/systemd/plex.container'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: 'quadlet_unit'
  notify: 'Reload systemd daemon'

- name: 'Enable and start Plex container'
  ansible.builtin.systemd:
    name: 'plex.service'
    daemon_reload: true
    enabled: true
    state: 'started'
  register: 'systemd_start'

- name: 'Restart Plex service if quadlet unit has changed while service was already started'
  ansible.builtin.systemd:
    name: 'plex.service'
    daemon_reload: true
    state: 'restarted'
  when: (quadlet_unit.changed and not systemd_start.changed)
