---
- name: 'Pull Plex image'
  containers.podman.podman_image:
    name: '{{ containers_images.plex }}:{{ containers_images_tags.plex }}'
    pull: true
    force: true
    state: 'present'
  register: 'container_image_pull'
  tags: ['never', 'containers-pull', 'containers-update']

- name: 'Update Plex tag in quadlet unit'
  ansible.builtin.template:
    src: 'plex.container.j2'
    dest: '/etc/containers/systemd/plex.container'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: (container_image_pull.changed)
  register: 'quadlet_unit'
  tags: ['never', 'containers-update']

- name: 'Restart Plex container'
  ansible.builtin.systemd:
    name: 'plex.service'
    daemon_reload: '{{ ("true" | bool) if quadlet_unit.changed else ("false" | bool) }}'
    state: 'restarted'
  when: ("containers-restart" in ansible_run_tags or
        ("containers-update" in ansible_run_tags and container_image_pull.changed and (rpm_ostree_upgrade is not defined or not rpm_ostree_upgrade.changed)))
  tags: ['never', 'containers-restart', 'containers-update']

- name: 'Disable Plex container'
  ansible.builtin.systemd:
    name: 'plex.service'
    enabled: false
  tags: ['never', 'containers-disable']

- name: 'Stop Plex container'
  ansible.builtin.systemd:
    name: 'plex.service'
    state: 'stopped'
  tags: ['never', 'containers-stop']

- name: 'Enable Plex container'
  ansible.builtin.systemd:
    name: 'plex.service'
    enabled: true
  tags: ['never', 'containers-enable']

- name: 'Start Plex container'
  ansible.builtin.systemd:
    name: 'plex.service'
    state: 'started'
  tags: ['never', 'containers-start']
