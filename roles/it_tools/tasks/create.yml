---
- name: 'Manage IT Tools CNAME record'
  delegate_to: 'localhost'
  check_mode: false
  block:
    - name: 'Get IT Tools CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/tools/CNAME/'
        method: 'GET'
        status_code: [200, 404]
        headers:
          Authorization: 'Token {{ desec_token }}'
      register: desec_rrsets_get

    - name: 'Create IT Tools CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/'
        method: 'POST'
        status_code: [201]
        headers:
          Authorization: 'Token {{ desec_token }}'
        body_format: 'json'
        body:
          subname: 'tools'
          type: 'CNAME'
          ttl: 3600
          records:
            - '{{ ansible_fqdn }}.'
      register: desec_rrsets_post
      when: (desec_rrsets_get.status == 404)
      changed_when: (desec_rrsets_post.status == 201)

    - name: 'Update IT Tools CNAME record'
      ansible.builtin.uri:
        url: 'https://desec.io/api/v1/domains/{{ domain_name }}/rrsets/tools/CNAME/'
        method: 'PATCH'
        status_code: [200]
        headers:
          Authorization: 'Token {{ desec_token }}'
        body_format: 'json'
        body:
          records:
            - '{{ ansible_fqdn }}.'
      register: desec_rrsets_patch
      when: (desec_rrsets_get.status == 200 and desec_rrsets_get.json.records != [ansible_fqdn + "."])
      changed_when: (desec_rrsets_patch.status == 200)

- name: 'Create IT Tools quadlet unit from template'
  ansible.builtin.template:
    src: 'it-tools.container.j2'
    dest: '/etc/containers/systemd/it-tools.container'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: 'quadlet_unit'
  notify: 'Reload systemd daemon'

- name: 'Enable and start IT Tools container'
  ansible.builtin.systemd:
    name: 'it-tools.service'
    daemon_reload: true
    enabled: true
    state: 'started'
  register: 'systemd_start'

- name: 'Restart IT Tools service if quadlet unit has changed while service was already started'
  ansible.builtin.systemd:
    name: 'it-tools.service'
    daemon_reload: true
    state: 'restarted'
  when: (quadlet_unit.changed and not systemd_start.changed)
