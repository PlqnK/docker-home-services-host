---
- name: 'Create Unpackerr bind mounts paths'
  ansible.builtin.file:
    path: '{{ containers_storage_base_path }}/env/unpackerr'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'directory'

- name: 'Create Unpackerr container environment file'
  ansible.builtin.copy:
    content: |
      UN_SONARR_0_API_KEY={{ unpackerr.sonarr_api_key }}
      UN_RADARR_0_API_KEY={{ unpackerr.radarr_api_key }}
      UN_LIDARR_0_API_KEY={{ unpackerr.lidarr_api_key }}
      UN_READARR_0_API_KEY={{ unpackerr.readarr_api_key }}
    dest: '{{ containers_storage_base_path }}/env/unpackerr/unpackerr.env'
    owner: 'root'
    group: 'root'
    mode: '0400'
  register: 'unpackerr_environment_file'

- name: 'Create Unpackerr container'
  containers.podman.podman_container:
    name: 'unpackerr'
    image: '{{ containers_images.unpackerr }}:{{ containers_images_tags.unpackerr }}'
    network:
      - 'common-internal'
    volumes:
      - '{{ autofs_base_path }}/downloads/bittorrent/downloads:/downloads/bittorrent/downloads:slave'
    timezone: '{{ timezone }}'
    env_file: '{{ containers_storage_base_path }}/env/unpackerr/unpackerr.env'
    env:
      TZ: '{{ timezone }}'
      UN_SONARR_0_URL: 'http://sonarr:8989'
      UN_SONARR_0_PATHS_0: '/downloads/bittorrent/downloads/tv'
      UN_SONARR_0_PROTOCOLS: 'torrent'
      UN_RADARR_0_URL: 'http://radarr:7878'
      UN_RADARR_0_PATHS_0: '/downloads/bittorrent/downloads/movies'
      UN_RADARR_0_PROTOCOLS: 'torrent'
      UN_LIDARR_0_URL: 'http://lidarr:8686'
      UN_LIDARR_0_PATHS_0: '/downloads/bittorrent/downloads/audio'
      UN_LIDARR_0_PROTOCOLS: 'torrent'
      UN_READARR_0_URL: 'http://readarr:8787'
      UN_READARR_0_PATHS_0: '/downloads/bittorrent/downloads/books'
      UN_READARR_0_PROTOCOLS: 'torrent'
    generate_systemd:
      names: true
      new: true
      path: '/etc/systemd/system'
      restart_policy: 'on-failure'
    recreate: '{{ ("true" | bool) if unpackerr_environment_file.changed else ("false" | bool) }}'
    state: 'created'

- name: 'Enable and start Unpackerr container'
  ansible.builtin.systemd:
    name: 'container-unpackerr.service'
    daemon_reload: true
    enabled: true
    state: 'started'
